import { Spinner } from "flowbite-react";
import SideBar from "../components/layout/SideBar";
import { useUser } from "../context/UserContext";
import React from "react";
import { getFunctions, httpsCallable } from "firebase/functions";
import { AnswerReviewRequest, DescriptionData, ReadingQuestionRequest } from "../interfaces/AiRequests";
import ExerciseWrapper from "../components/layout/ExerciseWrapper";
import { useTranslation } from "react-i18next";

const descriptionDataEN: DescriptionData = {
    mainHeading: "Welcome to Reading Practice!",
    smallDescription:
        "Whether you are a beginner or an advanced learner, we have something for everyone. You'll receive engaging reading texts generated by AI, tailored to your proficiency level.",
    paragraphs: [
        "For advanced levels, you'll get comprehensive reading texts designed to challenge and enhance your understanding. Beginners will receive simpler texts and a few sentences to help build their foundational skills.",
        "We recommend practicing each given topic diligently and not skipping any questions. To maximize your learning, avoid copying text directly when answering questions. Instead, type everything manually to better practice and understand the material.",
        "Submit your answers to receive a comprehensive review of what you did correctly and areas where you can improve.",
        "We wish you good luck and lots of fun on your journey to improving your reading skills!",
    ],
};

const descriptionDataDE: DescriptionData = {
    mainHeading: "Willkommen zum Leseübungen!",
    smallDescription:
        "Egal, ob Sie Anfänger oder Fortgeschrittener sind, wir haben für jeden etwas dabei. Sie erhalten ansprechende Lesetexte, die von KI generiert und auf Ihr Sprachniveau abgestimmt sind.",
    paragraphs: [
        "Für fortgeschrittene Lernende erhalten Sie umfassende Lesetexte, die darauf abzielen, Ihr Verständnis zu fördern und herauszufordern. Anfänger erhalten einfachere Texte und ein paar Sätze, um ihre grundlegenden Fähigkeiten aufzubauen.",
        "Wir empfehlen, jedes gegebene Thema sorgfältig zu üben und keine Fragen zu überspringen. Um Ihr Lernen zu maximieren, vermeiden Sie das direkte Kopieren von Texten beim Beantworten der Fragen. Stattdessen tippen Sie alles manuell, um besser zu üben und das Material zu verstehen.",
        "Reichen Sie Ihre Antworten ein, um eine umfassende Überprüfung dessen zu erhalten, was Sie richtig gemacht haben und wo Sie sich verbessern können.",
        "Wir wünschen Ihnen viel Glück und viel Spaß auf Ihrem Weg, Ihre Lesefähigkeiten zu verbessern!",
    ],
};

const descriptionDataUA: DescriptionData = {
    mainHeading: "Ласкаво просимо до практики читання!",
    smallDescription:
        "Незалежно від того, чи ви початківець або досвідчений учень, у нас є щось для кожного. Ви отримаєте цікаві тексти для читання, згенеровані штучним інтелектом, пристосовані до вашого рівня володіння мовою.",
    paragraphs: [
        "Для досвідчених учнів будуть надані комплексні тексти для читання, які покликані кинути виклик і поглибити ваше розуміння. Початківці отримають простіші тексти та кілька речень, щоб допомогти побудувати свої базові навички.",
        "Ми рекомендуємо ретельно практикувати кожну запропоновану тему і не пропускати жодного питання. Щоб максимізувати своє навчання, уникайте прямого копіювання тексту при відповіді на питання. Натомість набирайте все вручну, щоб краще практикуватися і зрозуміти матеріал.",
        "Надсилайте свої відповіді, щоб отримати всебічний огляд того, що ви зробили правильно, та де ви можете покращитись.",
        "Бажаємо вам удачі та багато задоволення на вашому шляху до вдосконалення навичок читання!",
    ],
};

const descriptionDataMap: Record<string, DescriptionData> = {
    en: descriptionDataEN,
    ua: descriptionDataUA,
    de: descriptionDataDE,
};

const Reading = () => {
    const { userData, setUserData } = useUser();
    const { t, i18n } = useTranslation();

    const functions = getFunctions();
    const getReadingQuestion = httpsCallable<ReadingQuestionRequest, string>(functions, "getReadingQuestion");
    const checkReadingAnswer = httpsCallable<AnswerReviewRequest, string>(functions, "checkReadingAnswer");

    if (!userData) {
        return (
            <div className="flex items-center justify-center h-full" style={{ minHeight: "80vh" }}>
                <Spinner className="h-24 w-24" />
            </div>
        );
    }

    const descriptionData = descriptionDataMap[i18n.language];

    return (
        <SideBar>
            <ExerciseWrapper
                pageType="reading"
                userData={userData}
                setUserData={setUserData}
                generateQuestion={getReadingQuestion}
                generateAnswerReview={checkReadingAnswer}
                descriptionData={descriptionData}
            />
        </SideBar>
    );
};

export default Reading;
